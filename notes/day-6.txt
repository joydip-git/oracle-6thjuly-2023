Java:
	Object oriented programming language
	secured programming language
	platform neutral
	it is a language as well as it is a framework
	its a high level language
	developed in 1995 by James Gosling (Oak)

platform: any h/w and/or s/w environment where your application runs is known as platform
framework: a development environment where you can write code (build), compile and run your application. it should provide facilities such as interaction with database, creating different type of application, testing facility etc. it should provide a runtime, where code can be executed. runtime will take care of initiating a process, starting execution from main method, allocate memory blocks for storage of data, deallocate the memory block etc. it should provide a library with lots of built-in facilities.

	a. standalone application: desktop application (AWT and Swing)
	b. web application: jsp-servlet, struts, spring, hibernate, JSF etc.
	c. enterprise application: EJB
	d. mobile application: Android and Java ME

Java Editions:
	1. Java SE: java.lang, java.io, java.net, java.util, java.sql, java.math etc.
	2. Java EE: web and enterprise. servlet , JSP, web service, EJB, JPA etc.
	3. Java ME: mobile applications
	4. Java FX: RIA application


Java versions:
	1. JDK 1.0
	2. JDK 1.1
	...............
	3. Java SE 6 (2005/2006)
	4. SE 7, SE8, SE9, 10, 11 ...18, 19

Java framework: 
	Runtime environment
	API

JDK: Java Development kit
JRE: Java Runtime Environment => actual implementation of JVM
JVM: Java Virtual Machine => abstract machine
	specification, implementation and instance

>javac sample.java
>java sample(sample.class)

C++ => byte code 

import com.java.common.dataaccess.OracleDataAccess;

package com.java.common
	Program => 

package com.java.common.shape
		Rectangle
		Circle
		Square
		......

package com.java.common.dataaccess

		OracleDataAccess
		MySqlDataAccess
		SqlServerDataAccess
		.......


data types:
	value type data type [primitive]
		Boolean => boolean
		Numberic => 
			Charcter => char '\u0000'				
			Number/Integral =>
				Integer
					=> byte, short, int, long 0L
				Floating-Point
					=> float 0.0f and double 0.0d
		
	reference type data type [non-primitive]
		Built-in : String, Array etc.
		user-defined: class, interface etc.

operators: unary, binary, ternary
arithmetic, relational, logical, assignment, shit, bitwise
control flow statements: if..else, while, do..while, switch...case, for, continue, break, default, 
		?:

variables: 
	value type variable
	reference type variable

	int x = 10;
	A obj = new A();

primitive and non-primitive






	